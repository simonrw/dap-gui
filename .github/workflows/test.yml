permissions:
  contents: read
on:
  push:
    branches: [main]
  pull_request:
# Spend CI time only on latest ref: https://github.com/jonhoo/rust-ci-conf/pull/5
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
env:
  RUST_LOG: "gui=debug,transport=debug,end_to_end=trace"
name: test
jobs:
  required:
    runs-on: ubuntu-latest
    name: ubuntu / ${{ matrix.toolchain }}
    strategy:
      matrix:
        toolchain: [stable, beta]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install ${{ matrix.toolchain }}
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}
      - uses: Swatinem/rust-cache@v2
      - name: cargo generate-lockfile
        if: hashFiles('Cargo.lock') == ''
        run: cargo generate-lockfile
      - name: Create python venv with debugpy
        run: |
          python -m venv .venv
          .venv/bin/python -m pip install debugpy
      # https://twitter.com/jonhoo/status/1571290371124260865
      - name: cargo test --locked
        run: |
          source .venv/bin/activate
          cargo test --locked --all-features --all-targets
      # https://github.com/rust-lang/cargo/issues/6669
      - name: cargo test --doc
        run: |
          source .venv/bin/activate
          cargo test --locked --all-features --doc
  minimal:
    runs-on: ubuntu-latest
    name: ubuntu / stable / minimal-versions
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install stable
        uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - name: Install nightly for -Zminimal-versions
        uses: dtolnay/rust-toolchain@nightly
      - name: rustup default stable
        run: rustup default stable
      - name: cargo update -Zdirect-minimal-versions
        run: cargo +nightly update -Zdirect-minimal-versions
      - name: Create python venv with debugpy
        run: |
          python -m venv .venv
          .venv/bin/python -m pip install debugpy
      - name: cargo test
        run: |
          source .venv/bin/activate
          cargo test --locked --all-features --all-targets
  os-check:
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }} / stable
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest] # TODO: , windows-latest]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install stable
        uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - name: cargo generate-lockfile
        if: hashFiles('Cargo.lock') == ''
        run: cargo generate-lockfile
      - name: cargo check
        run: cargo check --locked --all-features --all-targets
      - name: Create python venv with debugpy
        run: |
          python -m venv .venv
          .venv/bin/python -m pip install debugpy
      - name: cargo test
        run: |
          source .venv/bin/activate
          cargo test --locked --all-features --all-targets
  # TODO
  # python-tests:
  #   runs-on: ${{ matrix.os }}
  #   name: ${{ matrix.os }} / python
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       os: [ubuntu-latest, macos-latest]
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-python@v4
  #       with:
  #         python-version: "3.11"
  #     - name: Install ${{ matrix.toolchain }}
  #       uses: dtolnay/rust-toolchain@master
  #       with:
  #         toolchain: ${{ matrix.toolchain }}
  #     - uses: Swatinem/rust-cache@v2
  #     - name: cargo generate-lockfile
  #       if: hashFiles('Cargo.lock') == ''
  #       run: cargo generate-lockfile
  #     - name: Create python venv with test dependencies
  #       run: |
  #         python -m venv .venv
  #         .venv/bin/python -m pip install debugpy pytest


  # TODO
  # coverage:
  #   runs-on: ubuntu-latest
  #   name: ubuntu / stable / coverage
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         submodules: true
  #     - name: Install nightly
  #       uses: dtolnay/rust-toolchain@nightly
  #       with:
  #         components: llvm-tools-preview
  #     - name: cargo install cargo-llvm-cov
  #       uses: taiki-e/install-action@cargo-llvm-cov
  #     - name: cargo generate-lockfile
  #       if: hashFiles('Cargo.lock') == ''
  #       run: cargo generate-lockfile
  #     - name: cargo llvm-cov
  #       run: cargo llvm-cov --locked --all-features --lcov --output-path lcov.info
  #     - name: Upload to codecov.io
  #       uses: codecov/codecov-action@v3
  #       with:
  #         fail_ci_if_error: true
